#MYSQL_PASSWORD=$1
#if [ -z "$MYSQL_PASSWORD" ]; then
#echo "Input MySql Password is missing"
#exit 1
#fi
#
#source common.sh # Importing functions and variables from commmon.sh file
#component=backend
#
#Head "Disable default version of NodJs"
#dnf module disable nodejs -y &>>$log_file
#Stat $?
#
#Head "Enable NodeJs 18 version"
#dnf module enable nodejs:18 -y &>>$log_file
#Stat $?
#
#Head "Installing NodeJs"
#dnf install nodejs -y &>>$log_file
#Stat $?
#
#Head "Configuring backend service"
#cp backend.service /etc/systemd/system/backend.service &>>$log_file
#Stat $?
#
#Head "Adding Application user"
#id expense &>>log_file
#if [ "$?" -ne 0 ]; then
#useradd expense &>>$log_file
#fi
#Stat $?
#
#Head "Removing existing default app content"
#rm -rf /app &>>$log_file
#Stat $?

#Head "Creating Application Directory"
#mkdir /app &>>$log_file
#Stat $?

#Head "Downloading application content"
#curl -o /tmp/${component}.zip https://expense-artifacts.s3.amazonaws.com/${component}.zip &>>$log_file
#Stat $?
#cd /app

#Head "Extracting Application Content"
#unzip /tmp/${component}.zip &>>$log_file
#
#Head "Downloading Application dependencies"
#npm install &>>$log_file
#Stat $?
#
#Head "Reloading systemd and start backend service"
#systemctl daemon-reload &>>$log_file
#systemctl enable backend &>>$log_file
#systemctl restart backend &>>$log_file
#Stat $?
#
#Head "Installing  MySql Clinet"
#dnf install mysql -y &>>$log_file
#Stat $?
#
#Head "Loading Schema"
#mysql -h mysql-dev.kdevopspractice.online -uroot -p${MYSQL_PASSWORD} < /app/schema/backend.sql &>>$log_file
#Stat $?


- name: Backend Setup
  hosts: all
  become: true
  tasks:
    - name: Disable default version of NodJs
      ansible.builtin.shell: dnf module disable nodejs -y

    - name: Enable NodeJs 18 version
      ansible.builtin.shell: dnf module enable nodejs:18 -y

    - name: Installing NodeJs
      ansible.builtin.dnf:
        name: nodejs
        state: installed 

    - name: Configuring backend service
      ansible.builtin.copy:
        src: backend.service
        dest: /etc/systemd/system/backend.service
    - name: Adding Application user
      ansible.builtin.user:
        name: expense

    - name: Removing existing default app content
      ansible.builtin.file:
        path: /app
        state: absent

    - name: Creating Application Directory
      ansible.builtin.file:
        path: /app
        state: directory
    - name: Downloading and extracting application content
      ansible.builtin.unarchive:
        src: https://expense-artifacts.s3.amazonaws.com/backend.zip
        dest: /app
        remote_src: yes

    - name: Downloading dependencies  #using this module as we already have package
      community.general.npm:
        path: /app

    - name: Reloading systemd and start backend service
      ansible.builtin.systemd_service:
        name: backend
        enabled: true # This should be true so that even after reboot it comes up
        state: restarted

    - name: Installing  MySql Clinet
      ansible.builtin.dnf:
        name: mysql
        state: installed

    - name: Loading Schema
      community.mysql.mysql_db:
        state: import
        name: all
        target: /app/schema/backend.sql
        login_user: root
        login_password: ExpenseApp@1
        login_host: mysql-dev.kdevopspractice.online



